<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hairnada.mapper.board.BoardMapper">

    <insert id="insert">
        <selectKey keyProperty="boardNumber" order="BEFORE" resultType="long">
            SELECT SEQ_BOARD.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_BOARD (BOARD_NUMBER, BOARD_TITLE, BOARD_CONTENT, BOARD_VIEW_CNT, USER_NUMBER, BOARD_CATEGORY_NUMBER)
        VALUES (#{boardNumber}, #{boardTitle}, #{boardContent, jdbcType=CLOB}, 0, #{userNumber}, #{boardCategoryNumber, jdbcType=INTEGER})
    </insert>




    <delete id="delete">
        DELETE FROM TBL_BOARD
        WHERE BOARD_NUMBER = #{boardNumber}
    </delete>

    <update id="update">
        UPDATE TBL_BOARD
        SET BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}
        WHERE BOARD_NUMBER = #{boardNumber}
    </update>



    <select id="select" resultType="boardVo">
        SELECT BOARD_NUMBER, BOARD_TITLE, BOARD_CONTENT, B.USER_NUMBER, U.USER_NICKNAME, U.MEMBERSHIP_NUMBER, BOARD_VIEW_CNT,
               (SELECT COUNT(L.USER_NUMBER) FROM TBL_BOARD_LIKE L WHERE L.USER_NUMBER = #{userNumber} AND B.BOARD_NUMBER = L.BOARD_NUMBER) LIKE_CNT
        FROM TBL_BOARD B JOIN TBL_USER U
            ON B.board_number = #{boardNumber} AND B.USER_NUMBER = U.USER_NUMBER
    </select>

    <select id="selectAll" resultType="boardVo">
        SELECT BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
               USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
               BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
               USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
               BOARD_CATEGORY_NUMBER,
               (SELECT COUNT(L.USER_NUMBER) FROM TBL_BOARD_LIKE L WHERE L.USER_NUMBER = #{userNumber} AND S2.BOARD_NUMBER = L.BOARD_NUMBER) LIKE_CNT,
               (SELECT COUNT(BOARD_REPLY_NUMBER) FROM TBL_BOARD_REPLY BR WHERE S2.BOARD_NUMBER = BR.BOARD_NUMBER) REPLY_CNT
        FROM(
                SELECT ROWNUM AS RNUM, BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                       USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
                       BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
                       USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
                       BOARD_CATEGORY_NUMBER
                FROM(
                        SELECT B.BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                               B.USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
                               J.BOARD_FILE_UPLOAD_PATH, J.BOARD_FILE_UUID, J.BOARD_FILE_NAME,
                               UF.USER_FILE_UPLOAD_PATH, UF.USER_FILE_UUID, UF.USER_FILE_NAME,
                               B.BOARD_CATEGORY_NUMBER
                        FROM TBL_USER U JOIN TBL_BOARD B
                                             ON U.USER_NUMBER = B.USER_NUMBER
                                        LEFT JOIN (
                            SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER
                            FROM(
                                    SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER,
                                           RANK() OVER(PARTITION BY BOARD_NUMBER ORDER BY BOARD_FILE_NUMBER) RK
                                    FROM TBL_BOARD_FILE
                                )
                            WHERE RK = 1
                        ) J ON B.BOARD_NUMBER = J.BOARD_NUMBER
                                        LEFT JOIN TBL_USER_FILE UF ON U.USER_NUMBER = UF.USER_NUMBER
                        ORDER BY B.BOARD_NUMBER DESC
                    ) S1
<![CDATA[
                WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
]]>
) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}

    </select>

    <select id="selectTotal" resultType="_int">
        SELECT COUNT(BOARD_NUMBER) FROM TBL_BOARD
    </select>

    <select id="search" resultType="boardVo">
        SELECT BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
               USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
               BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
               USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
               BOARD_CATEGORY_NUMBER,
                (SELECT COUNT(BOARD_REPLY_NUMBER) FROM TBL_BOARD_REPLY BR WHERE S2.BOARD_NUMBER = BR.BOARD_NUMBER) REPLY_CNT
        FROM (
                 SELECT ROWNUM AS RNUM, BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                        USER_NUMBER, USER_NICKNAME,MEMBERSHIP_NUMBER,
                        BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
                        USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
                        BOARD_CATEGORY_NUMBER
                 FROM (
                          SELECT B.BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                                 B.USER_NUMBER, USER_NICKNAME,MEMBERSHIP_NUMBER,
                                 J.BOARD_FILE_UPLOAD_PATH, J.BOARD_FILE_UUID, J.BOARD_FILE_NAME,
                                 UF.USER_FILE_UPLOAD_PATH, UF.USER_FILE_UUID, UF.USER_FILE_NAME,
                                 B.BOARD_CATEGORY_NUMBER
                          FROM TBL_USER U
                                   JOIN TBL_BOARD B ON U.USER_NUMBER = B.USER_NUMBER
                                   LEFT JOIN (
                              SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER
                              FROM (
                                       SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER,
                                              RANK() OVER (PARTITION BY BOARD_NUMBER ORDER BY BOARD_FILE_NUMBER) RK
                                       FROM TBL_BOARD_FILE
                                   )
                              WHERE RK = 1
                          ) J ON B.BOARD_NUMBER = J.BOARD_NUMBER
                                   LEFT JOIN TBL_USER_FILE UF ON U.USER_NUMBER = UF.USER_NUMBER
                          <where>
        <choose>
            <when test="'title'.equals(search .searchType)" >
                BOARD_TITLE LIKE '%' || #{search.keyword} || '%'
            </when>
            <when test="'content'.equals(search.searchType)">
                BOARD_CONTENT LIKE '%' || #{search.keyword} || '%'
            </when>
            <otherwise></otherwise>
        </choose>
                          </where>
                          ORDER BY B.BOARD_NUMBER DESC
                      ) S1
    <![CDATA[
                 WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
    ]]>
  ) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}
    </select>

<!--  전체 검색 개수  -->
    <select id="searchTotal" resultType="_int">
        SELECT COUNT(BOARD_NUMBER)
        FROM TBL_BOARD
        <where>
        <choose>
            <when test="'title'.equals(search .searchType)" >
                BOARD_TITLE LIKE '%' || #{search.keyword} || '%'
            </when>
            <when test="'content'.equals(search.searchType)">
                BOARD_CONTENT LIKE '%' || #{search.keyword} || '%'
            </when>
            <otherwise></otherwise>
        </choose>
        </where>
    </select>

<!--  카테고리별로 찾기  -->
    <select id="selectCategory" resultType="boardVo" >
        SELECT BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
        USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
        BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
        USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
        BOARD_CATEGORY_NUMBER
        FROM (
        SELECT ROWNUM AS RNUM, B.BOARD_NUMBER, B.BOARD_TITLE, B.BOARD_VIEW_CNT, B.BOARD_CONTENT,
        B.USER_NUMBER, U.USER_NICKNAME, U.MEMBERSHIP_NUMBER,
        J.BOARD_FILE_UPLOAD_PATH, J.BOARD_FILE_UUID, J.BOARD_FILE_NAME,
        UF.USER_FILE_UPLOAD_PATH, UF.USER_FILE_UUID, UF.USER_FILE_NAME,
        B.BOARD_CATEGORY_NUMBER
        FROM TBL_BOARD B
        JOIN TBL_USER U ON B.USER_NUMBER = U.USER_NUMBER
        LEFT JOIN (
        SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER
        FROM (
        SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER,
        RANK() OVER (PARTITION BY BOARD_NUMBER ORDER BY BOARD_FILE_NUMBER) RK
        FROM TBL_BOARD_FILE
        )
        WHERE RK = 1
        ) J ON B.BOARD_NUMBER = J.BOARD_NUMBER
        LEFT JOIN TBL_USER_FILE UF ON U.USER_NUMBER = UF.USER_NUMBER
        <where>
            <if test="boardCategoryNumber != 0">
                AND B.BOARD_CATEGORY_NUMBER = #{boardCategoryNumber}
            </if>
        </where>
        ORDER BY B.BOARD_NUMBER DESC
        ) S
        <![CDATA[
    WHERE RNUM <= #{criteria.page} * #{criteria.amount}
  ]]>
        AND RNUM > (#{criteria.page} - 1) * #{criteria.amount}
    </select>

    <select id="selectBoardSearch" resultType="boardVo">
        SELECT BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
               USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
               BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
               USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
               BOARD_CATEGORY_NUMBER,
        (SELECT COUNT(L.USER_NUMBER) FROM TBL_BOARD_LIKE L WHERE L.USER_NUMBER = 1 AND S2.BOARD_NUMBER = L.BOARD_NUMBER) LIKE_CNT,
        (SELECT COUNT(BOARD_REPLY_NUMBER) FROM TBL_BOARD_REPLY BR WHERE S2.BOARD_NUMBER = BR.BOARD_NUMBER) REPLY_CNT
        FROM (
                 SELECT ROWNUM AS RNUM, BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                        USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
                        BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME,
                        USER_FILE_UPLOAD_PATH, USER_FILE_UUID, USER_FILE_NAME,
                        BOARD_CATEGORY_NUMBER
                 FROM (
                          SELECT B.BOARD_NUMBER, BOARD_TITLE, BOARD_VIEW_CNT, BOARD_CONTENT,
                                 B.USER_NUMBER, USER_NICKNAME, MEMBERSHIP_NUMBER,
                                 J.BOARD_FILE_UPLOAD_PATH, J.BOARD_FILE_UUID, J.BOARD_FILE_NAME,
                                 UF.USER_FILE_UPLOAD_PATH, UF.USER_FILE_UUID, UF.USER_FILE_NAME,
                                 B.BOARD_CATEGORY_NUMBER
                          FROM TBL_USER U
                                   JOIN TBL_BOARD B ON U.USER_NUMBER = B.USER_NUMBER
                                   LEFT JOIN (
                              SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER
                              FROM (
                                       SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER,
                                              RANK() OVER (PARTITION BY BOARD_NUMBER ORDER BY BOARD_FILE_NUMBER) RK
                                       FROM TBL_BOARD_FILE
                                   )
                              WHERE RK = 1
                          ) J ON B.BOARD_NUMBER = J.BOARD_NUMBER
                            LEFT JOIN TBL_USER_FILE UF
                            ON U.USER_NUMBER = UF.USER_NUMBER
                            <trim prefix="where" prefixOverrides="AND">
                                <if test="searchVo.boardCategoryNumber != null">
                                    AND BOARD_CATEGORY_NUMBER = #{searchVo.boardCategoryNumber}
                                </if>
                                <if test="searchVo.searchType == 'title'">
                                    AND BOARD_TITLE LIKE '%' || #{searchVo.keyword} || '%'
                                </if>
                                <if test="searchVo.searchType == 'content'">
                                    AND USER_NICKNAME LIKE '%' || #{searchVo.keyword} || '%'
                                </if>
                            </trim>
                          ORDER BY B.BOARD_NUMBER DESC
                      ) S1
<![CDATA[
                 WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
    ]]>
  ) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}
    </select>

    <select id="selectSearchTotal" resultType="_int">
        SELECT COUNT(B.BOARD_NUMBER)
        FROM TBL_USER U
                 JOIN TBL_BOARD B ON U.USER_NUMBER = B.USER_NUMBER
                 LEFT JOIN (
            SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER
            FROM (
                     SELECT BOARD_FILE_NUMBER, BOARD_FILE_UPLOAD_PATH, BOARD_FILE_UUID, BOARD_FILE_NAME, BOARD_NUMBER,
                            RANK() OVER (PARTITION BY BOARD_NUMBER ORDER BY BOARD_FILE_NUMBER) RK
                     FROM TBL_BOARD_FILE
                 )
            WHERE RK = 1
        ) J ON B.BOARD_NUMBER = J.BOARD_NUMBER
                 LEFT JOIN TBL_USER_FILE UF ON U.USER_NUMBER = UF.USER_NUMBER
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="boardCategoryNumber != null">
                AND BOARD_CATEGORY_NUMBER = #{boardCategoryNumber}
            </if>
            <if test="keyword != null">
                <if test="searchType == 'title'">
                    AND BOARD_TITLE LIKE '%' || #{keyword} || '%'
                </if>
                <if test="searchType == 'content'">
                    AND USER_NICKNAME LIKE '%' || #{keyword} || '%'
                </if>
            </if>
        </trim>
    </select>
    
    <update id="updateReadCount">
        UPDATE TBL_BOARD
        SET
        BOARD_VIEW_CNT = BOARD_VIEW_CNT + 1
        WHERE BOARD_NUMBER = #{boardNumber}
    </update>

    <select id="boardCount" resultType="boardCategoryVo">
        SELECT BOARD_CATEGORY_NUMBER, COUNT(BOARD_NUMBER) AS categoryCnt
        FROM TBL_BOARD
        WHERE BOARD_CATEGORY_NUMBER BETWEEN 1 AND 4
        GROUP BY BOARD_CATEGORY_NUMBER
        ORDER BY BOARD_CATEGORY_NUMBER ASC
    </select>


</mapper>